generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ========= MODELOS PRINCIPAIS =========

model Product {
  id               Int      @id @default(autoincrement())
  name             String
  sku              String?  @unique
  description      String?
  unit             String?
  status           String   @default("ATIVO")
  stockQuantity    Int
  minStockQuantity Int      @default(0)
  salePrice        Float
  costPrice        Float?
  location         String?
  mainImageUrl     String?
  videoUrl         String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  supplier   Supplier? @relation(fields: [supplierId], references: [id])
  supplierId Int?

  images    ProductImage[]
  movements StockMovement[]
}

model StockMovement {
  id                  Int      @id @default(autoincrement())
  type                String
  quantity            Int
  details             String?
  relatedParty        String?
  unitPriceAtMovement Float?
  notes               String?
  document            String?
  createdAt           DateTime @default(now())

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model AccountPayable {
  id       Int      @id @default(autoincrement())
  name     String
  category String
  value    Float
  dueDate  DateTime
  status   String   @default("A_PAGAR")

  installmentType    String @default("UNICA") // UNICA ou PARCELADO
  installments       Int? // Total de parcelas (opcional para UNICA)
  currentInstallment Int? // NÃºmero da parcela atual (opcional para UNICA)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  payments Payment[]
}

model Payment {
  id        Int            @id @default(autoincrement())
  accountId Int
  account   AccountPayable @relation(fields: [accountId], references: [id])
  paidAt    DateTime
  amount    Float?
  createdAt DateTime       @default(now())
}

// ========= MODELOS DE SUPORTE =========

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  movements StockMovement[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  products Product[]
}

model Supplier {
  id    Int     @id @default(autoincrement())
  name  String
  cnpj  String? @unique
  phone String?
  email String? @unique

  products Product[]
}

model Contact {
  id      Int     @id @default(autoincrement())
  name    String
  company String?
  email   String? @unique
  phone   String?
  type    String  @default("Cliente")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductImage {
  id  Int    @id @default(autoincrement())
  url String

  product   Product @relation(fields: [productId], references: [id])
  productId Int
}
