generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ======================================
// ========= MODELOS RESTAURADOS ========
// ======================================

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  movements StockMovement[]
}

model Product {
  id                 Int      @id @default(autoincrement())
  name               String
  sku                String?  @unique
  description        String?
  unit               String?
  status             String   @default("ATIVO") // Corrigido para String
  stockQuantity      Int
  minStockQuantity   Int      @default(0)
  salePrice          Float
  costPrice          Float?
  location           String?
  mainImageUrl       String?
  videoUrl           String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  supplier   Supplier? @relation(fields: [supplierId], references: [id])
  supplierId Int?

  images    ProductImage[]
  movements StockMovement[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  products Product[]
}

model Supplier {
  id   Int    @id @default(autoincrement())
  name String

  products Product[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model StockMovement {
  id        Int    @id @default(autoincrement())
  type      String
  quantity  Int
  details   String? // Usaremos para o "Motivo"

  // --- NOVOS CAMPOS ADICIONADOS ---
  relatedParty String? // Guardará o nome do Cliente ou Fornecedor
  unitPriceAtMovement Float? // Preço unitário no momento da transação
  notes       String? // Para o campo "Observações"
  
  document  String?
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}
